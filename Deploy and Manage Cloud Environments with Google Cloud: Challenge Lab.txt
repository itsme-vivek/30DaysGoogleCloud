TASK 1:
GO TO COMPUTE ENGINE > VM INSTANCES > OPEN SSH OF kraken-jumphost

TYPE THE COMMANDS IN SSH:

cd /work/dm

sed -i s/SET_REGION/us-east1/g prod-network.yaml

gcloud deployment-manager deployments create prod-network --config=prod-network.yaml

gcloud config set compute/zone us-east1-b

gcloud container clusters create kraken-prod \
          --num-nodes 2 \
          --network kraken-prod-vpc \
          --subnetwork kraken-prod-subnet\
          --zone us-east1-b


gcloud container clusters get-credentials kraken-prod

cd /work/k8s

for F in $(ls *.yaml); do kubectl create -f $F; done


TASK 2
STAY IN SSH AND TYPE THESE COMMANDS BELOW:

gcloud config set compute/zone us-east1-b

gcloud compute instances create kraken-admin --network-interface="subnet=kraken-mgmt-subnet" --network-interface="subnet=kraken-prod-subnet"

OPEN MONITORING > ALERTING > CREATE POLICY

ADD CONDITION

RESOURCE TYPE: VM Instance
METRIC: CPU Utilization
FILTER: Instance Name
Instance Value: kraken-admin
CLICK APPLY
THRESHOLD: 50
FOR: 1 minute

PRESS NEXT

MANAGE NOTIFICATION
ADD EMAIL

PRESS NEXT

ALERT NAME: kraken-admin

PRESS CREATE


TASK 3
OPEN CLOUD SHELL

gcloud config set compute/zone us-east1-b

gcloud container clusters get-credentials spinnaker-tutorial

DECK_POD=$(kubectl get pods --namespace default -l "cluster=spin-deck" -o jsonpath="{.items[0].metadata.name}")


kubectl port-forward --namespace default $DECK_POD 8080:9000 >> /dev/null &

CLOUD SHELL > WEB PREVIEW

SPINNAKER WILL OPEN

CLICK ON APPLICATIONS

CLICK ON "sample"

CLICK ON "PIPELINES"

HOVER OVER THE ORANGE BLOCK AND PRESS "continue"

ONCE EVERYTHING IS DEPLOYED COME BACK TO CLOUD SHELL

gcloud config set compute/zone us-east1-b

gcloud source repos clone sample-app

cd sample-app
touch a

git config --global user.email "$(gcloud config get-value account)"
git config --global user.name "Student"
git commit -a -m "change"
git tag v1.0.1
git push --tags
